- hosts: 127.0.0.1
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3

# need to start by installing 'C Development Tols and Libraries'
# sudo dnf groupinstall 'C Development Tools and Libraries'

  tasks:
    # UNCOMMENT AND USE THIS TO TRIGGER A HANDLER
    # - name: trigger nginx-restart
    #   command: /bin/true
    #   notify:
    #     - enable rabbitmq admin

    - name: install pyenv packages
      # these should have been installed manually when installing pyenv
      # but just in case...
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        - zlib-devel
        - bzip2
        - bzip2-devel
        - readline-devel
        - sqlite
        - sqlite-devel
        - openssl-devel
        - xz-devel
        - findutils

    - name: install ansible packages
      # these should have been installed manually when installing ansible
      # but just in case...
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        - libffi-devel
        - redhat-rpm-config

    - name: install basic packages
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        - libsodium
        - i3
        - i3lock
        - xautolock        # lock screen after an amount of inactivity
        - xbacklight       # adjust screen brightness
        - xsel             # to allow copy/paste from emacs to system
        - pavucontrol      # pulse audio control panel
        - tmux
        - redis
        - patch
        - libyaml-devel    # for compiling ruby versions
        - gdbm-devel       # for compiling ruby versions
        - htop
        - gcc-c++
        - openldap-devel   # for python ldap package (mind)
        - libxml2-devel    # for lxml.etree (mind)
        - libxslt-devel    # for lxml.etree (mind)
        - remmina          # Windows remote desktop client
        - sway             # i3 for wayland
        - cmake            # for redissearch
        - zeal             # offline document viewer (not yet avilable for fedora 30)
      # notify:           # it seems this is not needed when using the compatability module below
      #   - libsodium exports

    - name: install rabbitmq
      become: yes
      dnf:
        name: rabbitmq-server
        state: present
      notify:
        - enable rabbitmq admin

    - name: libsodium.so.1 compatability exports
      become: yes
      dnf:
        name: libxcrypt-compat
        state: present
      tags: libsodium-compat

    # - name: install leapfrog git commands
    #   shell: "{{ item }}"
    #   with_items:
    #     - curl https://gh.leapfrogonline.net/raw/ops/git_commands/master/install.sh > tmp-gitcommands.txt
    #   notify:
    #     - install leapfrog git commands from file

    # -----------------------------------------------------
    #
    # Need to enable rabbitmq management plugin
    # sudo rabbitmq-plugins enable rabbitmq_management
    #
    # -----------------------------------------------------

    # POSTGRES 9.6
    - name: install postgres 9.6 repo
      become: yes
      dnf:
        name: 'https://download.postgresql.org/pub/repos/yum/reporpms/F-{{ hostvars[inventory_hostname].ansible_distribution_major_version }}-x86_64/pgdg-fedora-repo-latest.noarch.rpm'
        disable_gpg_check: yes
        state: present
      tags:
        - postgres96-all

    - name: install postgres client packages
      become: yes
      dnf:
        name: postgresql96
        enablerepo: pgdg96
        state: present
      tags:
        - postgres96-all

    - name: install postgres server packages
      become: yes
      dnf:
        name: postgresql96-server
        enablerepo: pgdg96
        state: present
      tags:
        - postgres96-all

    - name: install postgres devel packages
      become: yes
      dnf:
        name: postgresql96-devel
        enablerepo: pgdg96
        state: present
      tags:
        - postgres96-all

    - name: install postgres contrib packages
      become: yes
      dnf:
        name: postgresql96-contrib
        enablerepo: pgdg96
        state: present
      tags:
        - postgres96-all
      notify:
        - init postgres

    ## END POSTGRES ##

    - name: Install emacs
      dnf: name=emacs state=present
      become: yes

    # - mkdir --parents .live-packs/{{ ansible_user_id }}-pack
    # - cp -R .emacs.d/packs/template/user-template-pack .live-packs/{{ ansible_user_id }}-pack
    - name: install emacs Live packs
      shell: |
        git clone https://github.com/overtone/emacs-live.git .emacs.d
        make -C .emacs.d/packs/stable/org-pack/lib/org-mode autoloads
        git clone --recursive git@gh.leapfrogonline.net:JFosco/emacs-live-jfosco-pack.git .live-packs/{{ ansible_user_id }}-pack
        echo "(live-add-packs '(~/.live-packs/jfosco-pack))" > .emacs-live.el
      args:
        chdir: $HOME
        creates: .emacs-live.el
      tags:
        - emacs-live

    # install ffdmpeg to play video on twitter
    - name: install rpmfusion repo for ffmpeg
      become: yes
      dnf:
        name: 'https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.noarch.rpm'
        disable_gpg_check: yes
        state: present
      tags:
        - rpmfusion-repo

    - name: install ffmpeg
      become: yes
      dnf:
        name: ffmpeg
        enablerepo: rpmfusion
        state: present

    - name: install chrome
      become: yes
      dnf:
        name: https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
        disable_gpg_check: yes
        state: present

    - name: install applications
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        - keepassxc
        - gparted

    # - name: install ImageMagick (v6) for fox
    #   become: yes
    #   dnf:
    #     name: ImageMagick-6.9.3.0
    #     state: present
        # to make certain this is not updated by dnf
        # add the line
        # exclude=ImageMagick
        # to the dnf config file (/etc/dnf/dnf.conf)

    - name: install packages for lfo apps
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        # - ImageMagick-devel-6.9.3.0
        - GraphicsMagick   # for fox with ImageMagick v. 6
        - npm
        - vsftpd # ftp server for testing psh apps
        - lftp   # ftp command for terminal
        - redhat-rpm-config  # for hashi (to build pyodbc)
        - gcc-c++            # for hashi (to build pyodbc)
        - python3-devel      # for hashi (to build pyodbc)
        - unixODBC-devel     # for hashi (to build pyodbc)
        - git-subtree      # needed for "git catalina pull <module>"

    - name: download yarn
      become: yes
      shell: curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
      args:
        creates: /etc/yum.repos.d/yarn.repo
      notify:
        - install yarn

    - name: install nodenv
      shell: git clone https://github.com/nodenv/nodenv.git ~/.nodenv
      args:
        chdir: $HOME
        creates: ~/.nodenv
      notify: setup nodenv

    - name: create src directory
      shell: mkdir src
      args:
        chdir: $HOME
        creates: ~/src

    - name: install redissearch
      shell: git clone https://github.com/RediSearch/RediSearch.git
      args:
        chdir: ~/src
        creates: ~/src/RediSearch
      notify: make redissearch

      # **************************************************
      #  Things I am testing

    # - name: install docker
      # become: yes
      # action: >
      #   {{ ansible_pkg_mgr }} name={{ item }} state=present
      # with_items:
      #   - docker




  handlers:
    - name: enable rabbitmq admin
      become: yes
      shell: |
        rabbitmq-plugins enable rabbitmq_management

    - name: init postgres
      become: yes
      shell: |
        /usr/pgsql-9.6/bin/postgresql96-setup initdb
        systemctl enable postgresql-9.6
        systemctl start postgresql-9.6
      tags:
        postgres96-all

    # - name: libsodium exports
    #   shell: "{{ item }}"
    #   loop:
    #     - echo '#for libsodium' >> ~/.bash_profile
    #     - echo 'export LD_LIBRARY_PATH="/usr/local/lib"' >> ~/.bash_profile
    #   args:
    #     chdir: $HOME
    #   tags: libsodium-exports

    - name: setup nodenv
      shell: "{{ item }}"
      loop:
        - cd ~/.nodenv && src/configure && make -C src
        - echo 'export PATH="$HOME/.nodenv/bin:$PATH"' >> ~/.bash_profile
        - eval "$(nodenv init -)"
        - git clone https://github.com/nodenv/node-build.git ~/.nodenv/plugins/node-build
      args:
        chdir: $HOME

    - name: install yarn
      become: yes
      action: >
        {{ ansible_pkg_mgr }} name={{ item }} state=present
      loop:
        - yarn


    # Need to get this working with above install command
    # - name: install leapfrog git commands from file
    #   become: yes
    #   shell: "{{ item }}"
    #   with_items:
    #     - sh tmp-gitcommands.txt
    #     - rm tmp_gitcommands.txt

    # not really tested
    - name: install node-build-update-defs
      shell: "{{ item }}"
      loop:
        - git clone https://github.com/nodenv/node-build-update-defs.git ~/.nodenv/plugins/node-build-update-defs
      args:
        creates: ~/.nodenv/plugins/node-build-update-defs

    - name: make redissearch
      shell: make
      args:
        chdir: ~/src/RediSearch
        creates: ~/src/RediSearch/redissearch.so
      # still need to create a redis.conf file currently in ~/.config/redis.conf

        # TO BE ADDED TO THIS
#  - install for rbenv
#  - install for ruby-build
#    to install ruby-build cd ~/.rbenv/plugins (the plugins subdir might need to be created
#       git clone https://github.com/rbenv/ruby-build
#       echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bash_profile
#  - run gem install capistrano -v "2.15.4"   # for LFO deploys
#  - run gem install diplomat                 # for LFO deploys


# NOTES
# currently for LFO apps libsodium 0.5.0 must be installed
# also you mest export LD_LIBRARY_PATH="/usr/local/lib"
#
# must also symlink libreadline for python shell
#   cd /usr/lib64
#   sudo ln -s libreadline.so.7.0 libreadline.so.6
#
# Generate and add your ssh key to github before running
#
# For Postgres
# add your userid with superuser privilidges
# in /var/lib/pgsql/data/pg_hba.conf (or wherever pg_hba.conf is)
# change all entries that are "ident" under METHOD to "trust"
#
# For Chrome
# need to figure out how to not download .rpm every time
#

# TO DO
#
# for redis search
# still need to create a redis.conf file currently in ~/.config/redis.conf
#
# for postgres
# need to add pgsql path to path
